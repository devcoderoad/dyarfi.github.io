// ****** Our base variables ******* //
// @import url('https://fonts.googleapis.com/css?family=Nothing+You+Could+Do%7CRaleway:100,200,300,400,500,600,700,800,900%7CMontserrat:100,200,300,400,500,600,700,800,900');
@import url('https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700|Roboto:100,300,400,500,700,900');
// dyarfi.github.io version 3
$font-size-base: 0.98rem !default;

// font-family: 'Roboto', sans-serif;
// font-family: 'Roboto Condensed', sans-serif;
$font-family-base : 'Roboto Condensed', sans-serif;
$font-family-head-base : 'Roboto Condensed', 'Roboto';
$font-family-lead-base : 'Roboto', sans-serif;
// <link href="https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700|Roboto:100,300,400,500,700,900" rel="stylesheet">

// Font Weight Base
// $font-weight-light:           100 !default;
// $font-weight-normal:          400 !default;
// $font-weight-bold:            700 !default;
$font-weight-light:           200 !default;
$font-weight-normal:          300 !default;
$font-weight-bold:            500 !default;
$font-weight-bolder:          900 !default;


// Your variable overrides
$body-bg: #ffffff;
$body-color: rgb(55, 55, 55);

$dark:          #212529 !default;
$link-color:                #9e9e9e !default;

@import "_variables"; // --- Vendors Variables
@import "vendor"; // --- Vendors

// Your font family base
$font-family-lead-base : 'Lato', sans-serif;
$font-family-head-base : 'Roboto', sans-serif;

// Your theme base color
$theme-color : #ff000a !default; // #cc9900
$theme:         $theme-color !default;

// Background variables light
$light-primary : lighten($primary, 25%);
$light-success : lighten($success, 25%);
$light-warning : lighten($warning, 25%);
$light-danger : lighten($danger, 25%);
$light-info : lighten($info, 25%);
$light-dark : lighten($dark, 25%);
$light-theme : lighten($theme, 25%);

// Background variables dark
$dark-primary : darken($primary, 28%);
$dark-success : darken($success, 28%);
$dark-warning : darken($warning, 28%);
$dark-danger : darken($danger, 28%);
$dark-info : darken($info, 15%);
$dark-secondary : darken($secondary, 15%);
$dark-theme : darken($theme, 32%);

/*
|--------------------------------------------------------------------------
| Image Filter
|--------------------------------------------------------------------------
*/
/* --- 1. Filter Grayscale --- */
/* --- 1.1 Variables - grayscale image filter --- */
/* --- 1.1.1 Variable Default --- */
%ilist {
  filter: grayscale(1);
}
%ilist:hover {
  filter: none;
}
/* --- 1.1.2 Variable Invert --- */
%ilist-inv {
	filter: none;
}
%ilist-inv:hover {
	filter: grayscale(1);
	transition: 0.40s both;
}
/* --- 1.2 Classes - grayscale image filter --- */
/* --- 1.2.1 Class Default --- */
.ilist {
	@extend %ilist;
	&:hover {
		@extend %ilist:hover;
	}
}
/* --- 1.2.2 Class Invert --- */
.ilist-inv {
	@extend %ilist-inv;
	&:hover {
		@extend %ilist-inv:hover;
	}
}

/* --- 2. Filter Invisible --- */
/* --- 2.1 Variables - invisible image filter --- */
/* --- 2.1.1 Variable Default --- */
%ilist-i {
	filter: none;
}
%ilist-i:hover {
	filter: opacity(.5);
}
/* --- 2.1.2 Variable Invert --- */
%ilist-i-inv {
	filter: opacity(.5);
}
%ilist-i-inv:hover {
	filter: none;
}
/* --- 2.2.1 Class Default --- */
.ilist-i {
	@extend %ilist-i;
	&:hover {
		@extend %ilist-i:hover;
	}
}
/* --- 2.2.2 Class Invert --- */
.ilist-i-inv {
	@extend %ilist-i-inv;
	&:hover {
		@extend %ilist-i-inv:hover;
	}
}

/* --- 3. Filter Blur --- */
/* --- 3.1 Variables - blur image filter --- */
/* --- 3.1.1 Variable Default --- */
%ilist-b {
  filter: none;
}
%ilist-b:hover {
  filter: blur(2px);
}
/* --- 3.1.2 Variable Invert --- */
%ilist-b-inv {
	filter: blur(2px);
}
%ilist-b-inv:hover {
	filter: none;
}
/* --- 3.2.1 Class Default --- */
.ilist-b {
	@extend %ilist-b;
	&:hover {
		@extend %ilist-b:hover;
	}
}
/* --- 3.2.2 Class Invert --- */
.ilist-b-inv {
	@extend %ilist-b-inv;
	&:hover {
		@extend %ilist-b-inv:hover;
	}
}

/* --- 4. Filter Contrast --- */
/* --- 4.1 Variables - contrast image filter --- */
/* --- 4.1.1 Variable Default --- */
%ilist-c {
	filter: none;
}
%ilist-c:hover {
	filter: contrast(1.1);
}
/* --- 4.1.2 Variable Invert --- */
%ilist-c-inv {
	filter: contrast(1.1);
}
%ilist-c-inv:hover {
	filter: none;
}
/* --- 4.2.1 Class Default - contrast image filter --- */
.ilist-c {
	@extend %ilist-c;
	&:hover {
		@extend %ilist-c:hover;
	}
}
/* --- 4.2.2 Class Invert - contrast image filter --- */
.ilist-c-inv {
	@extend %ilist-c-inv;
	&:hover {
		@extend %ilist-c-inv:hover;
	}
}

/* ---- 5. Filter Classes Default initialization --- */
/* transition you can change transition effects here */
[class~="ilist"], [class^="ilist-"], [class*=" ilist-"] {
	transition: 0.35s ease-in;
}

/* --- 2.3 Text Shadow --- */
// Default text shadow effect
%text-shadow { text-shadow: 0px 1px 0px rgba($dark, 1); }
%text-shadow-dark { text-shadow: 0px 1px 0px rgba($black, 1); }

.text-shadow {
	@extend %text-shadow;
}
.text-shadow-dark {
	@extend %text-shadow-dark;
}

// Box Shadow Placeholer and Class
// -- Placeholder -- box shadow default
%box-shadow {
	box-shadow: 0px 0px 18px -3px rgba(143, 143, 143, .50);
}
%box-shadow-hover {
	box-shadow: 0px 0px 20px -3px rgba(143, 143, 143, .75);
}
// -- Placeholder -- box shadow dark
%box-shadow-dark {
	box-shadow: 3px 3px 11px -3px rgba(0, 0, 0, .25);
}
/* --- 9.1 Box Shadow Default --- */
// -- Class Default -- Box Shadow Default Class
.box-shadow {
	@extend %box-shadow;
}
/* --- 9.2 Box Shadow Dark --- */
// -- Class Dark -- Box Shadow Dark Class
.box-shadow-dark {
	@extend %box-shadow-dark;
}

// /* --- 2.1 Font bases --- */

.text-theme {
    color:$theme;
}

.font-body-base {
	font-family: $font-family-base;
}
.font-head-base {
	font-family: $font-family-head-base;
}
.font-lead-base {
	font-family: $font-family-lead-base;
}
.r90 {
  transform: rotate(-90deg) translateY(15px);
}
.head-thin {
	font-family: sans-serif;
	font-weight: 400;
}
.head-bold {
	font-family: sans-serif;
	font-weight: 900;
}

/* --- Shadow --- */
.shadow-md {
	// box-shadow: 0 .75rem .75rem rgba(0, 0, 0, 0.155);
	transition: .1s ease;
	box-shadow: 0 0.175rem 0.92rem rgba(0, 0, 0, 0.075) !important;
	&:hover {
			box-shadow: 0 0.375rem 1.2rem rgba(0, 0, 0, 0.075) !important;    
	}
}

.display-1, .display-2, .display-3, .display-4 {
	font-weight: $font-weight-bolder;
}

/***********************************************************************************************/
/* =Preloader */
/***********************************************************************************************/ 
#preloader {
	background-color: #FFF;
	bottom: 0;
	left: 0;
	position: fixed;
	right: 0;
	top: 0;
	z-index: 999999;
}
  
#loading-animation {
	background-image: url("../img/preloader.gif") ;
	background-position: center center;
	background-repeat: no-repeat;
	width: 100%;
	height: 100%;
	display: block;
	left: 0%;
	right: 0%;
	top: 0%;
	bottom: 0%;
	position: absolute;
}

/* --- Button Menu --- */
.btn {
	font-family: $font-family-lead-base;
}
.btn-rounded {
	border-radius:2rem !important;
}
.btn-square {
	border-radius:0;
}
.btn-hidden {
	&:hover {
		span {
			transform: translateX(5px);
			left: 0px;
		}
		i {
			opacity:1;
			visibility: visible;
			transform: translateX(-2px) scale(1);
		}
	}
	span {
		transition: left .35s ease-out;
		display: inline;
		position: relative;
		left: -10px;
		margin-left:.1rem;
	}
	i {
		opacity: 0;
		visibility: hidden;
		transition-delay: .55s;
		transition: transform .25s ease-in, opacity .25s linear, visibility .25s linear;
		transform: translateX(-10px) scale(1.2);
	}
}
.btn-ghost-round {
    border-radius:2rem;
    margin-left: .75rem;
    margin-right: .75rem; 
}
// --------- Backgrounds utility
.bg-gradient-ltr-primary {
	background-image: linear-gradient(to right, #49B79C, $primary, #49B79C);
	background-size: 300% 100%;
	background-position: 0% center;
}
.bg-gradient-ltr-success {
	background-image: linear-gradient(to right, #49B79C, $success, #49B79C);
	background-size: 300% 100%;
	background-position: 0% center;
}
.bg-gradient-ltr-warning {
	background-image: linear-gradient(to right, #49B79C, $warning, #49B79C);
	background-size: 300% 100%;
	background-position: 0% center;
}
.bg-gradient-ltr-danger {
	background-image: linear-gradient(to right, #49B79C, $danger, #49B79C);
	background-size: 300% 100%;
	background-position: 0% center;
}
.bg-gradient-ltr-info {
	background-image: linear-gradient(to right, #49B79C, $dark-info, #49B79C);
	background-size: 300% 100%;
	background-position: 0% center;
}
.bg-gradient-down-primary {
	background-image: linear-gradient(to bottom, $light-primary 0%, $dark-primary 120%);
}
.bg-gradient-down-success {
	background-image: linear-gradient(to bottom, $light-success 0%, $dark-success 120%);
}
.bg-gradient-down-warning {
	background-image: linear-gradient(to bottom, $light-warning 0%, $dark-warning 120%);
}
.bg-gradient-down-danger {
	background-image: linear-gradient(to bottom, $light-danger 0%, $dark-danger 120%);
}
.bg-gradient-down-info {
	background-image: linear-gradient(to bottom, $light-info 0%, $dark-info 120%);
}
.bg-gradient-alpha-down-primary {
	background-image: linear-gradient(to bottom, rgba($light-primary,.7) 5%, rgba($dark-primary,.7) 180%);
}
.bg-gradient-alpha-down-success {
	background-image: linear-gradient(to bottom, rgba($light-success,.7) 5%, rgba($dark-success,.7) 180%);
}
.bg-gradient-alpha-down-warning {
	background-image: linear-gradient(to bottom, rgba($light-warning,.7) 5%, rgba($dark-warning,.7) 180%);
}
.bg-gradient-alpha-down-danger {
	background-image: linear-gradient(to bottom, rgba($light-danger,.7) 5%, rgba($dark-danger,.7) 180%);
}
.bg-gradient-alpha-down-info {
	background-image: linear-gradient(to bottom, rgba($light-info,.7) 5%, rgba($dark-info,.7) 180%);
}
.bg-gradient-alpha-down-dark {
	background-image: linear-gradient(to bottom, rgba($light-dark,.7) 5%, rgba($black,.7) 180%);
}

// --------- Bg default color
.bg-alpha-primary {
	background-color: rgba($dark-primary,.40);
}
.bg-alpha-danger {
	background-color: rgba($dark-danger,.40);
}
.bg-alpha-warning {
	background-color: rgba($dark-warning,.40);
}
.bg-alpha-success {
	background-color: rgba($dark-success,.40);
}
.bg-alpha-info {
	background-color: rgba($dark-info,.40);
}
.bg-alpha-secondary {
	background-color: rgba($dark-secondary,.40);
}

// --------- Bg dark and light alpha color
.bg-alpha-dark {
	background-color:rgba($black,.65);
}
.bg-alpha-light {
	background-color:rgba($white,.65);
}

/* --- 6.3 Background Overlay Filters --- */
// Placeholder
%overlay {
	content: " ";
	position: absolute;
	z-index: 0;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width:100%;
	height: 100%;
	pointer-events: none;
}
%overlay-parent {
	background-size:100%;
	position: relative;
	> img {
        z-index: -1
	}
}
[data-filter=overlay-mute] {
	&:before {
		background-color:rgba($black,.25);
    }
    
	@extend %overlay-parent;
}
[data-filter=overlay-warning] {
	&:before {
		background-color:rgba($dark-warning,.5);
	}
}
[data-filter=overlay-secondary] {
	&:before {
		background-color:rgba($dark-secondary,.5);
	}
}
[data-filter=overlay-theme] {
	&:before {
		background-color:rgba($dark-theme,.5);
	}
}

[data-overlay=overlay-dark] {
	&:before {
		background-color:rgba($black,.75);
	}
}
[data-overlay=overlay-mute] {
	&:before {
		background-color:rgba($black,.45);
	}
}
[data-overlay=overlay-warning] {
	&:before {
		background-color:rgba($dark-warning,.5);
	}
}
[data-overlay=overlay-info] {
	&:before {
		background-color:rgba($dark-info,.5);
	}
}
[data-overlay=overlay-secondary] {
	&:before {
		background-color:rgba($dark-secondary,.5);
	}
}
[data-overlay=overlay-theme] {
	&:before {
		background-color:rgba($dark-theme,.5);
	}
}


[data-filter=overlay-dark] {
	> * {
        position: relative;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}
[data-filter=overlay-mute] {
	> * {
        position: relative;
	}
	@extend %overlay-parent;
	&:before {
        @extend %overlay;
	}
}
[data-filter=overlay-warning] {
	> * {
		position: relative;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}
[data-filter=overlay-secondary] {
	> * {
		position: relative;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}
[data-filter=overlay-theme] {
	> * {
		position: relative;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}
// Data overlay
[data-overlay=overlay-dark] {
	> * {
        position: relative;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}
[data-overlay=overlay-mute] {
	> * {
        position: relative;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}
[data-overlay=overlay-warning] {
	> * {
        position: relative;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}
[data-overlay=overlay-info] {
	> * {
        position: relative;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}
[data-overlay=overlay-secondary] {
	> * {
        position: relative;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}
[data-overlay=overlay-theme] {
	> * {
        position: relative;
        // z-index: 0;
	}
	@extend %overlay-parent;
	&:before {
		@extend %overlay;
	}
}

#section-home {
	padding-top:0rem;
	padding-bottom: 0rem;
}
#section-welcome {
    padding-top:6rem;
		padding-bottom:3rem;
		@include media-breakpoint-down(sm) { 
			padding-top:3rem;
			// padding-bottom:3rem;
		}
}
#section-about {
    padding-top:6rem;
    padding-bottom:6rem;
		background-color: #f2f2f2;
		@include media-breakpoint-down(sm) { 
			padding-top:3rem;
			padding-bottom:3rem;
		}
}
#section-blog, #section-clients {
	padding-top:0rem;
	padding-bottom:6rem;
	@include media-breakpoint-down(sm) { 
		padding-top:3rem;
		padding-bottom:3rem;
	}
}
#section-gallery {
    background-color: #f2f2f2;
    padding-top:5rem;
    padding-bottom:6rem;
    height: 100%;
    min-height: 1px;
}
#section-infos {
	padding-top:3rem;
	padding-bottom:3rem;
	background-color: $light;
}
.section-single {
	position:relative;
	margin:auto;
	text-align:center;
	height:364px;
	overflow: hidden;
	background-attachment:fixed;
	background-position: top center;
	background-size: cover;
}
#footer {
    text-shadow: 1px 1px 1px rgba($white, 0.9);
    padding-top:1.5rem;
    padding-bottom:1.5rem;
}
/* --- 7.1 Scroll to top --- */
.button-down {
	text-decoration:none;
	// font-family:$font-family-head-base;
	font-size: 1.2rem;
	// @extend %text-shadow;
	&:hover {
		// color:$theme-color;
		text-decoration:none;
	}
}
.scrollTop {
    // @extend %box-shadow-dark;
	// font-family: $font-family-lead-base;
	position: fixed;
	// z-index: -1;
	right: 15px;
	// bottom: 10px;
	bottom: -70px;
	// background-color: rgba(#BE3F48,0.7);
	// background-color: rgba($theme-color,0.5);
	opacity: 0;
	transition: all 0.4s ease-in-out 0s;
	text-shadow: none;
	// border-radius: .25rem;
	// &:hover {
	// 	background-color: rgba($theme-color,1);
	// }
	a {
		// font-size: 18px;
		display: block;
		padding: 6px 12px 6px 12px;
		// color: #fff;
	}
}
/*
 * based on Pedro Botelho in Playground : https://tympanus.net/codrops/2013/05/07/a-collection-of-page-transitions/
 */

// ANIMATION 
/* move from / to  */
.pt-page-moveToLeft {
	-webkit-animation: moveToLeft .6s ease both;
	animation: moveToLeft .6s ease both;
}

.pt-page-moveFromLeft {
	-webkit-animation: moveFromLeft .6s ease both;
	animation: moveFromLeft .6s ease both;
}

.pt-page-moveToRight {
	-webkit-animation: moveToRight .6s ease both;
	animation: moveToRight .6s ease both;
}

.pt-page-moveFromRight {
	-webkit-animation: moveFromRight .6s ease both;
	animation: moveFromRight .6s ease both;
}

.pt-page-moveToTop {
	-webkit-animation: moveToTop .6s ease both;
	animation: moveToTop .6s ease both;
}

.pt-page-moveFromTop {
	-webkit-animation: moveFromTop .6s ease both;
	animation: moveFromTop .6s ease both;
}

.pt-page-moveToBottom {
	-webkit-animation: moveToBottom .6s ease both;
	animation: moveToBottom .6s ease both;
}

.pt-page-moveFromBottom {
	-webkit-animation: moveFromBottom .6s ease both;
	animation: moveFromBottom .6s ease both;
}

/* scale and fade */

.pt-page-scaleDown {
	-webkit-animation: scaleDown .7s ease both;
	animation: scaleDown .7s ease both;
}

.pt-page-scaleUp {
	-webkit-animation: scaleUp .7s ease both;
	animation: scaleUp .7s ease both;
}

.pt-page-scaleUpDown {
	-webkit-animation: scaleUpDown .5s ease both;
	animation: scaleUpDown .5s ease both;
}

.pt-page-scaleDownUp {
	-webkit-animation: scaleDownUp .5s ease both;
	animation: scaleDownUp .5s ease both;
}

.pt-page-scaleDownCenter {
	-webkit-animation: scaleDownCenter .4s ease-in both;
	animation: scaleDownCenter .4s ease-in both;
}

.pt-page-scaleUpCenter {
	-webkit-animation: scaleUpCenter .4s ease-out both;
	animation: scaleUpCenter .4s ease-out both;
}

blockquote {
    // padding: 13px 26px;
    // margin: 0 0 26px;
    // font-size: 18.5px;
	// border-left: 5px solid #eee;
	border-color: $link-color;
}

.bg-glitchy {
	position: relative;
	width: 142px;
	height: 170px;
	@extend %ilist;
	// width: 100%;
	// height: 100vh;
	// background: url(bg.jpg);
	background: url('../img/5X6.jpg');
	// display: block;
	// animation: glitch-2 .75s linear reverse;
	// animation: glitch-2 .1s linear alternate-reverse;
	// animation: animateGlithcy .2s ease infinite;
	// opacity: .5;
	// overflow: hidden;
	// mix-blend-mode: multiply;
	// animation: animateGlithcy 1.2s linear alternate-reverse infinite;
	&:before
	{
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: url('../img/5X6.jpg');
		opacity: .5;
		// mix-blend-mode: hard-light;
		mix-blend-mode: multiply;
	}
	&:hover:before
	{
		animation: animateGlithcy .25s linear infinite;
	}
}

@keyframes animateGlithcy
{
	0%
	{
		opacity: .1;
		background-position: 0 0;
		filter: hue-rotate(0deg);
	}
	10%
	{
		background-position: 5px 0;
	}
	20%
	{
		background-position: -5px 0;
	}
	30%
	{
		background-position: 15px 0;
	}
	40%
	{
		background-position: -5px 0;
	}
	50%
	{
		background-position: -25px 0;
	}
	60%
	{
		background-position: -50px 0;
	}
	70%
	{
		background-position: 0 -20px;
	}
	80%
	{
		background-position: -60px -20px;
	}
	81%
	{
		background-position: 0 0;
	}
	100%
	{
		opacity: 1;
		background-position: 0 0;
		filter: hue-rotate(360deg);
	}
}

.navlink {
  &-nav {
    // margin-top:6rem;
    margin:0 0 0 1rem;
  }
  &-item {
    display: block;
    text-align: left;
    transition: .5s ease;
    margin: 0 auto;
    padding: 0;
    height: 100px;
    overflow: hidden;
    &:hover {
      opacity: .5
    }
  }
}
// TAB animation
.tab-content {
  > .tab-pane {
    transform: translateY(20px);
    transition: transform .5s ease-in-out, opacity .5s ease-in;
    transition-delay: .15s;
    opacity: 0;
    display: none;
    &.fade.show.active {
      transform: translateY(0px);
      opacity: 1;
    }
  }
  > .active {
    display: block;
  }
}

// ============= Glitch ============= //
.btn-link-glitch {
  position: relative;
  display: inline-block;
  // color: #281130;
  color: $dark;
  font-size: 24px;
  letter-spacing: 0.02em;
  text-decoration: none;
  z-index: 1;
  
  &:before,
  &:after {
      content:'';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
  }

  &:before {
      background-color: #00ffff;
      z-index: -1;
  }

  &:after {
      background-color: #ff00ff;
      z-index: -2;
  }
  
  &:hover {

      text-decoration: none;

      .link-inner {
          animation: glitchy 0.3s ease 1;
      }

      &:before {
          animation: glitchy 0.3s ease 0.3s infinite;
      }
      
      &:after {
          animation: glitchy 0.3s ease infinite reverse;
      }
  }
}
.link-inner {
  display: block;
  height: 100%;
  background-color: #fff;
  padding: 15px 25px;
}
.text-link-glitch {
  position: relative;
  display: inline-block;
  font-size: 45px;
  text-decoration: none;
  color: #fff;
  z-index: 1;
  
  &:before,
  &:after {
      content:attr(data-content);
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
  }
  
  &:before {
      color: #00ffff;
      z-index: -1;
  }

  &:after {
      color: #ff00ff;
      z-index: -2;
  }
  
  &:hover {

      text-decoration: none;

      &:before {
          animation: glitchy 0.95s ease-out 0.3s infinite;
      }
      
      &:after {
          animation: glitchy 0.95s ease infinite reverse;
      }
  }
}
.nav-item.nav-link.active .navlink-item {
  color: $nav-tabs-link-active-color !important;
}

@keyframes glitchy {
  0%   {transform: translate(-2px, 2px);}
  25%  {transform: translate(-2px, -2px);}
  50%  {transform: translate(2px, 2px);}
  75%  {transform: translate(2px, -2px);}
  100%  {transform: translate(-2px, 2px);}
}

.glitch{
  color:white;
  // font-size:100px;
  // width:400px;
  position:relative;
  margin:0 auto;
  &:hover {
    text-decoration: none;
  }
  &:after{
    content:attr(data-text);
    position:absolute;
    left:2px;
    text-shadow:-1px 0 red;
    top:0;
    color:white;
    background:$dark;
    overflow:hidden;
    clip:rect(0,900px,0,0); 
    animation:noise-anim 2s infinite linear alternate-reverse;
  }
  &:before{
    content:attr(data-text);
    position:absolute;
    left:-2px;
    text-shadow:1px 0 blue; 
    top:0;
    color:white;
    background:$dark;
    overflow:hidden;
    clip:rect(0,900px,0,0); 
    animation:noise-anim-2 3s infinite linear alternate-reverse;
  }
}

@keyframes noise-anim{
  $steps:20;
  @for $i from 0 through $steps{
    #{percentage($i*(1/$steps))}{
      clip:rect(random(100)+px,9999px,random(100)+px,0);
    }
  }
}
@keyframes noise-anim-2{
  $steps:20;
  @for $i from 0 through $steps{
    #{percentage($i*(1/$steps))}{
      clip:rect(random(100)+px,9999px,random(100)+px,0);
    }
  }
}

.glitch-1{
  color:white;
  // font-size:100px;
  // width:400px;
  position:relative;
  margin:0 auto;
  &:hover {
    text-decoration: none;
  }
  &:after{
    content:attr(data-text);
    position:absolute;
    left:2px;
    text-shadow:-1px 0 red;
    bottom:0;
    color:white;
    background:$dark;
    overflow:hidden;
    clip:rect(0,900px,0,0); 
    animation:noise-anim-11 2s infinite linear alternate-reverse;
  }
  &:before{
    content:attr(data-text);
    position:absolute;
    left:-2px;
    text-shadow:1px 0 blue; 
    top:0;
    color:white;
    background:$dark;
    overflow:hidden;
    clip:rect(0,900px,0,0); 
    animation:noise-anim-22 3s infinite linear alternate-reverse;
  }
}

@keyframes noise-anim-11{
  $steps:10;
  @for $i from 0 through $steps{
    #{percentage($i*(1/$steps))}{
      clip:rect(random(100)+px,9999px,random(100)+px,0);
    }
  }
}
@keyframes noise-anim-22{
  $steps:20;
  @for $i from 0 through $steps{
    #{percentage($i*(1/$steps))}{
      clip:rect(random(90)+px,9999px,random(90)+px,0);
    }
  }
}

.glitch-2{
  color:white;
  // font-size:100px;
  // width:400px;
  position:relative;
  margin:0 auto;
  &:hover {
    text-decoration: none;
  }
  &:after{
    content:attr(data-text);
    position:absolute;
    left:2px;
    text-shadow:-1px 0 red;
    bottom:0;
    color:white;
    background:$dark;
    overflow:hidden;
    clip:rect(0,900px,0,0); 
    animation:noise-anim-33 2s infinite linear alternate-reverse;
  }
  &:before{
    content:attr(data-text);
    position:absolute;
    left:-2px;
    text-shadow:1px 0 blue; 
    top:0;
    color:white;
    background:$dark;
    overflow:hidden;
    clip:rect(0,900px,0,0); 
    animation:noise-anim-44 3s infinite linear alternate-reverse;
  }
}

@keyframes noise-anim-33{
  $steps:10;
  @for $i from 0 through $steps{
    #{percentage($i*(1/$steps))}{
      clip:rect(random(100)+px,9999px,random(100)+px,0);
    }
  }
}
@keyframes noise-anim-44{
  $steps:20;
  @for $i from 0 through $steps{
    #{percentage($i*(1/$steps))}{
      clip:rect(random(90)+px,9999px,random(90)+px,0);
    }
  }
}

/********************************* keyframes **************************************/
/* move from / to  */
@-webkit-keyframes moveToLeft {
	from { }
	to { -webkit-transform: translateX(-100%); }
}
@keyframes moveToLeft {
	from { }
	to { -webkit-transform: translateX(-100%); transform: translateX(-100%); }
}

@-webkit-keyframes moveFromLeft {
	from { -webkit-transform: translateX(-100%); }
}
@keyframes moveFromLeft {
	from { -webkit-transform: translateX(-100%); transform: translateX(-100%); }
}

@-webkit-keyframes moveToRight { 
	from { }
	to { -webkit-transform: translateX(100%); }
}
@keyframes moveToRight { 
	from { }
	to { -webkit-transform: translateX(100%); transform: translateX(100%); }
}

@-webkit-keyframes moveFromRight {
	from { -webkit-transform: translateX(100%); }
}
@keyframes moveFromRight {
	from { -webkit-transform: translateX(100%); transform: translateX(100%); }
}

@-webkit-keyframes moveToTop {
	from { }
	to { -webkit-transform: translateY(-100%); }
}
@keyframes moveToTop {
	from { }
	to { -webkit-transform: translateY(-100%); transform: translateY(-100%); }
}

@-webkit-keyframes moveFromTop {
	from { -webkit-transform: translateY(-100%); }
}
@keyframes moveFromTop {
	from { -webkit-transform: translateY(-100%); transform: translateY(-100%); }
}

@-webkit-keyframes moveToBottom {
	from { }
	to { -webkit-transform: translateY(100%); }
}
@keyframes moveToBottom {
	from { }
	to { -webkit-transform: translateY(100%); transform: translateY(100%); }
}

@-webkit-keyframes moveFromBottom {
	from { -webkit-transform: translateY(100%); }
}
@keyframes moveFromBottom {
	from { -webkit-transform: translateY(100%); transform: translateY(100%); }
}
/* scale and fade */
@-webkit-keyframes scaleDown {
	from { }
	to { opacity: 0; -webkit-transform: scale(.8); }
}
@keyframes scaleDown {
	from { }
	to { opacity: 0; -webkit-transform: scale(.8); transform: scale(.8); }
}

@-webkit-keyframes scaleUp {
	from { opacity: 0; -webkit-transform: scale(.8); }
}
@keyframes scaleUp {
	from { opacity: 0; -webkit-transform: scale(.8); transform: scale(.8); }
}

@-webkit-keyframes scaleUpDown {
	from { opacity: 0; -webkit-transform: scale(1.2); }
}
@keyframes scaleUpDown {
	from { opacity: 0; -webkit-transform: scale(1.2); transform: scale(1.2); }
}

@-webkit-keyframes scaleDownUp {
	from { }
	to { opacity: 0; -webkit-transform: scale(1.2); }
}
@keyframes scaleDownUp {
	from { }
	to { opacity: 0; -webkit-transform: scale(1.2); transform: scale(1.2); }
}

@-webkit-keyframes scaleDownCenter {
	from { }
	to { opacity: 0; -webkit-transform: scale(.7); }
}
@keyframes scaleDownCenter {
	from { }
	to { opacity: 0; -webkit-transform: scale(.7); transform: scale(.7); }
}

@-webkit-keyframes scaleUpCenter {
	from { opacity: 0; -webkit-transform: scale(.7); }
}
@keyframes scaleUpCenter {
	from { opacity: 0; -webkit-transform: scale(.7); transform: scale(.7); }
}

/* animation delay classes */
.pt-page-delay100 {
	-webkit-animation-delay: .1s;
	animation-delay: .1s;
}
.pt-page-delay180 {
	-webkit-animation-delay: .180s;
	animation-delay: .180s;
}
.pt-page-delay200 {
	-webkit-animation-delay: .2s;
	animation-delay: .2s;
}
.pt-page-delay300 {
	-webkit-animation-delay: .3s;
	animation-delay: .3s;
}
.pt-page-delay400 {
	-webkit-animation-delay: .4s;
	animation-delay: .4s;
}
.pt-page-delay500 {
	-webkit-animation-delay: .5s;
	animation-delay: .5s;
}
.pt-page-delay700 {
	-webkit-animation-delay: .7s;
	animation-delay: .7s;
}
.pt-page-delay1000 {
	-webkit-animation-delay: 1s;
	animation-delay: 1s;
}
// Animation -- start:
// Image on Boostrap Cards
@keyframes imgZoomOut {
	from {
			transform: scale3d(1, 1, 1);
	}
	50% {
		transform: scale3d(1.05, 1.05, 1.05);
	}
	// 100% {
	//   transform: scale3d(1, 1, 1);
	// }
}
%imgZoomOut {
	animation-duration: .78s;
	animation-fill-mode: both;
	animation-name: imgZoomOut;
}

.up-down-pulse {
animation: up-down 1s infinite;
}

@keyframes up-down {
0% {
	transform: scale(1);
}
50% {
	transform: scale(1.2);
}
100% {
	transform: scale(1);
}
}

// Animation on icons
// from left to right
@keyframes toRightFromLeft {
49% {
	transform: translate(100%);
}
50% {
	// opacity: 0;
	transform: translate(-100%);
}
51% {
	// opacity: 1;
}
}
// from bottom to top
@keyframes toTopFromBottom {
49% {
	transform: translateY(-100%);
}
50% {
	opacity: 0;
	transform: translateY(100%);
}
51% {
	opacity: 1;
}
}
// from bottom to top with fadein
@keyframes toTopFromBottomFade {
	from {
			opacity: 0;
			transform: translate3d(0, 100%, 0);
	}    
	to {
			opacity: 1;
			transform: none;
	}
}
// Used for <i> tags for icons
.icon-effect {
i {
	transition: transform 0.12s ease-out, opacity 0.12s ease-out;
}
&-scale {
  &-up {
    .icon-link {
      i {
          opacity: 1;
          &:hover {
            opacity: .7;
            transform: scale(1.175);
          }
        }
      }
    }
    &-down {
      .icon-link {
          i {
            opacity: 1;
            &:hover {
              opacity: .7;
              transform: scale(0.9);
            }
          }
        }
      }
    }
}

// Bootstrap
// Media queries are available via Sass mixins:
@include media-breakpoint-up(xs) { }
@include media-breakpoint-up(sm) { }
@include media-breakpoint-up(md) { }
@include media-breakpoint-up(lg) { }
@include media-breakpoint-up(xl) { }
// We occasionally use media queries that go in the other direction (the given screen size or smaller):
@include media-breakpoint-down(xs) { }
@include media-breakpoint-down(sm) { }
@include media-breakpoint-down(md) { }
@include media-breakpoint-down(lg) { }
// There are also media queries and mixins for targeting a single segment of screen sizes using the minimum and maximum breakpoint widths.
@include media-breakpoint-only(xs) { }
@include media-breakpoint-only(sm) { }
@include media-breakpoint-only(md) { }
@include media-breakpoint-only(lg) { }
@include media-breakpoint-only(xl) { }
// The Sass mixin for targeting the same screen size range would be:
@include media-breakpoint-between(md, xl) { }